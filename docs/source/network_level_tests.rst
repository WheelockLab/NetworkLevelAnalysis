Network-level Statistical Tests
======================================

Methods
--------------------------

The non-permuted method measures how significant each network is compared to the entire connectome using
the given statistical test.

The full connectome method ranks the non-permuted (observed) significance of each network against the
significance of the same network calculated over many permutations using the same test.
I DON"T KNOW HOW TO EXPLAIN THE PROBABILITY BEING CALCULATED - Jim

The within network-pair method measures how significant each network is compared to all permutations of
only the selected network.

Common Inputs
------------------------

:P: Network level p-value threshold
:Behavior Count: Number of different behavior vectors intended to test.

Provided Tests
---------------------------

* **Hypergeomtric**

  * MATLAB's `hypercdf <https://www.mathworks.com/help/stats/hygecdf.html>` used to find the probablity
* **Chi-squred**

  * Runs a :math:`\chi`\ :sup:`2` test. 

.. math::

    \chi^2 = \sum_{n=1}^n \frac{O_i - E_i)^2}{E_i}

* **Kolmogorov-Smirnov**
  
  * MATLAB's `kstest2 <https://www.mathworks.com/help/stats/kstest2.html>`
* **Wilcoxon**

  * MATLAB's `ranksum <https://www.mathworks.com/help/stats/ranksum.html>`
* **Welch's t-test**
  * Implements an optomized Welch's t-test comparing the functional connectivity of two groups.
  * Extra imports compared to other edge level tests
  :Group name(s): Names associated with each group. (For example, 'Male' and 'Female')
  :Group val(s): Behavioral value associated with each group. If 'Female' is donated as '0', and 'Male' as '1', set the vals to the numerical values.

* **Student's t-test**
  * MATLAB `ttest2 <https://www.mathworks.com/help/stats/ttest2.html>` function.

Creating additional network-level tests
-----------------------------------------------------

To create a network-level test, a test class must be added to the codebase. Refer to the current tests in ``+nla/+net/+test``

* **Test objects**
  All test objects must inherit from ``nla.net.test.Base`` and be in the ``+nla/+net/+test`` directory. There are also properties and methods
  that must be included.

  * Constant properties required::
    
    properties (Constant)
      name = "students_t"
      display_name = "Student's T-test"
      statistics = ["t_statistic", "single_sample_t_statistic"]
      ranking_statistic = "t_statistic"
    end

    :name: The name of the test with no special characters (spaces, &, etc)
    :display_name: A formal name that will be used for displaying in the GUI. Any string will work
    :statistics: All statistics that will be generated by the test. No special characters
    :ranking_statistic: The statistic used for ranking and calculating p-values. Note: if there is a single sample version of the statistic
    in addition to a two sample statistic, the GUI will automatically add "single_sample_" during rankings for non-permuted and within network pair
    ranking.

  * A ``run`` method::

    result = run(obj, test_options, edge_test_results, network_atlas, permutations)

    :test_options: Also called ``input_struct`` in edge-level tests. Parameters needed to run the test.
    :edge_test_results: The output from the edge-level test.
    :network_atlas: A network atlas of the form ``nla.NetworkAtlas``
    :permutations: Boolean to determine if the test is being run with permutations (``true``) or without (``false``)

  * A ``requiredInputs`` method. See :ref:`Edge-level tests <requiredInputs>`
  
Network Level results
---------------------------------------
.. mat:module:: .

All network level tests use ``nla.net.NetworkTestResult`` as the result object. This object uses the properties of the test
to name the results. 

.. mat:autoclass:: NetworkTestResult

    .. mat:automethod:: merge

    .. mat:automethod:: concatenateResult

    .. mat:automethod:: output

    .. mat:automethod:: createResultsStorage

    .. mat:automethod:: editableOptions

    .. mat:automethod:: getPValueNames

The three test methods (no_permutations, full_connectome, within_network_pair) will each contain multiple TriMatrices (lower half of a square matrix) of results.::

    :d: This is the results of a Cohen's D test (effects size) using the results of the test method
    :uncorrected_<single/two>_sample_p_value: The uncorrected p-value found by ranking the observed (non-permuted) result versus the 
    test results of all the permutations.
    :legacy_<single/two>_sample_p_value: The p-value found using the individual test p-values. Not verified for correctness.
    :westfall_<single/two>_sample_p_value: The uncorrected p-value corrected for family-wise error rate using the method described by Westfall and Young :cite:p:`WestfallPH`
    :winkler_<single/two>_sample_p_value: The uncorrected p-value corrected using the method described in :cite:p:`WinklerA`
