var sourceData86 = {"FileContents":["classdef Behavior < nla.inputField.InputField","    properties (Constant)","        name = 'behavior';","        disp_name = 'Behavior';","    end","    ","    properties","        behavior_filename = false","        behavior_full = false","        behavior = false","        behavior_idx = false","        covariates = false","        covariates_idx = false","        cols_selected = false","        covariates_enabled","    end","    ","    properties (Access = protected)","        label = false","        button = false","        table = false","        button_set_bx = false","        button_add_cov = false","        button_sub_cov = false","        button_view_design_mtx = false","        select_partial_variance_label = false","        select_partial_variance = false","    end","    ","    methods","        function obj = Behavior()","            import nla.* % required due to matlab package system quirks","            obj.covariates_enabled = nla.inputField.CovariatesEnabled.ALL;","            obj.resetSelectedCol();","        end","        ","        function resetSelectedCol(obj)","            obj.behavior_idx = false;","            obj.covariates = false;","            obj.covariates_idx = false;","            obj.cols_selected = false;","        end","        ","        function [w, h] = draw(obj, x, y, parent, fig)","            import nla.* % required due to matlab package system quirks","            ","            obj.fig = fig;","            ","            table_w = max(parent.Position(3) - (inputField.LABEL_GAP * 4), 500);","            table_h = 300;","            ","            label_gap = inputField.LABEL_GAP;","            h = inputField.LABEL_H + label_gap + table_h + label_gap + inputField.LABEL_H + label_gap + inputField.LABEL_H;","            ","            %% Create label","            if ~isgraphics(obj.label)","                obj.label = uilabel(parent);","            end","            obj.label.Text = 'Behavior:';","            label_w = inputField.widthOfString(obj.label.Text, inputField.LABEL_H);","            obj.label.HorizontalAlignment = 'left';","            obj.label.Position = [x, y - inputField.LABEL_H, label_w + label_gap, inputField.LABEL_H];","            ","            %% Create button","            if ~isgraphics(obj.button)","                obj.button = uibutton(parent, 'push', 'ButtonPushedFcn', @(h,e)obj.buttonClickedCallback());","            end","            button_w = 100;","            obj.button.Position = [x + label_w + label_gap, y - inputField.LABEL_H, button_w, inputField.LABEL_H];","            ","            w = label_w + label_gap + button_w;","            ","            %% Create table","            if ~isgraphics(obj.table)","                obj.table = uitable(parent);","                obj.table.CellSelectionCallback = @obj.cellSelectedCallback;","                obj.table.SelectionType = 'column';","                obj.table.ColumnName = {'None'};","                obj.table.RowName = {};","                obj.table.Position = [x, y - (table_h + label_gap + inputField.LABEL_H), table_w, table_h];","            end","            ","            w2 = table_w;","            ","            %% 'Set Behavior' button","            [obj.button_set_bx, w3] = obj.createButton(obj.button_set_bx, 'Set Behavior', parent, x, y - h + inputField.LABEL_H + label_gap + inputField.LABEL_H, @(h,e)obj.button_set_bxClickedCallback());","            obj.button_set_bx.BackgroundColor = '#E3FDD8';","            ","            %% 'Add Covariate' button","            [obj.button_add_cov, w4] = obj.createButton(obj.button_add_cov, 'Add Covariate', parent, x + w3 + label_gap, y - h + inputField.LABEL_H + label_gap + inputField.LABEL_H, @(h,e)obj.button_add_covClickedCallback());","            obj.button_add_cov.BackgroundColor = '#FADADD';","            ","            %% 'Remove Covariate' button","            [obj.button_sub_cov, w5] = obj.createButton(obj.button_sub_cov, 'Remove Covariate', parent, x + w3 + label_gap + w4 + label_gap, y - h + inputField.LABEL_H + label_gap + inputField.LABEL_H, @(h,e)obj.button_sub_covClickedCallback());","            obj.button_sub_cov.BackgroundColor = '#FADADD';","            ","            %% 'View Design Matrix' button","            [obj.button_view_design_mtx, w6] = obj.createButton(obj.button_view_design_mtx, 'View Design Matrix', parent, x + w3 + label_gap + w4 + label_gap + w5 + label_gap, y - h + inputField.LABEL_H + label_gap + inputField.LABEL_H, @(h,e)obj.button_view_design_mtxClickedCallback());","            ","            %% 'Partial Variance' options","            obj.select_partial_variance_label = uilabel(parent);","            obj.select_partial_variance_label.HorizontalAlignment = 'left';","            obj.select_partial_variance_label.Text = 'Remove shared variance from covariates:';","            select_partial_variance_label_w = inputField.widthOfString(obj.select_partial_variance_label.Text, inputField.LABEL_H);","            obj.select_partial_variance_label.Position = [x, y - h, select_partial_variance_label_w, inputField.LABEL_H];","            ","            select_partial_variance_w = 100;","            obj.select_partial_variance = uidropdown(parent);","            obj.genPartialVarianceOpts();","            obj.select_partial_variance.Position = [x + select_partial_variance_label_w + label_gap, y - h, select_partial_variance_w, inputField.LABEL_H];","            obj.select_partial_variance.Value = PartialVarianceType.NONE;","            w7 = x + select_partial_variance_label_w + label_gap + select_partial_variance_w;","            ","            w = max([w, w2, w3 + label_gap + w4 + label_gap + w5 + label_gap + w6, w7]);","        end","        ","        function undraw(obj)","            import nla.* % required due to matlab package system quirks","            if isgraphics(obj.button)","                delete(obj.button)","            end","            if isgraphics(obj.label)","                delete(obj.label)","            end","            if isgraphics(obj.table)","                delete(obj.table)","            end","            if isgraphics(obj.button_set_bx)","                delete(obj.button_set_bx)","            end","            if isgraphics(obj.button_add_cov)","                delete(obj.button_add_cov)","            end","            if isgraphics(obj.button_sub_cov)","                delete(obj.button_sub_cov)","            end","            if isgraphics(obj.button_view_design_mtx)","                delete(obj.button_view_design_mtx)","            end","            if isgraphics(obj.select_partial_variance_label)","                delete(obj.select_partial_variance_label)","            end","            if isgraphics(obj.select_partial_variance)","                delete(obj.select_partial_variance)","            end","        end","        ","        function read(obj, input_struct)","            import nla.* % required due to matlab package system quirks","            obj.loadField(input_struct, 'behavior_filename');","            obj.loadField(input_struct, 'behavior_full');","            obj.loadField(input_struct, 'behavior');","            obj.loadField(input_struct, 'behavior_idx');","            ","            if obj.covariates_enabled == nla.inputField.CovariatesEnabled.NONE","                obj.covariates = false;","                obj.covariates_idx = false;","            else","                obj.loadField(input_struct, 'covariates');","                obj.loadField(input_struct, 'covariates_idx');","            end","            ","            if isfield(input_struct, 'partial_variance')","                if obj.covariates_enabled == inputField.CovariatesEnabled.ALL","                    obj.select_partial_variance.Value = input_struct.partial_variance;","                elseif obj.covariates_enabled == inputField.CovariatesEnabled.ONLY_FC","                    if input_struct.partial_variance == PartialVarianceType.NONE","                        obj.select_partial_variance.Value = PartialVarianceType.NONE;","                    else","                        obj.select_partial_variance.Value = PartialVarianceType.ONLY_FC;","                    end","                end","            else","                obj.select_partial_variance.Value = PartialVarianceType.NONE;","            end","            ","            obj.update();","        end","        ","        function [input_struct, error] = store(obj, input_struct)","            import nla.* % required due to matlab package system quirks","            input_struct.behavior_filename = obj.behavior_filename;","            input_struct.behavior_full = obj.behavior_full;","            input_struct.behavior = obj.behavior;","            input_struct.behavior_idx = obj.behavior_idx;","            input_struct.covariates = obj.covariates;","            input_struct.covariates_idx = obj.covariates_idx;","            input_struct.partial_variance = obj.select_partial_variance.Value;","            error = false;","        end","    end","    ","    methods (Access = protected)","        function [button, w] = createButton(obj, button, label, parent, x, y, callback)","            import nla.* % required due to matlab package system quirks","            ","            %% Create button","            if ~isgraphics(button)","                button = uibutton(parent, 'push', 'ButtonPushedFcn', callback);","            end","            button_w = 100;","            button.Position = [x, y - inputField.LABEL_H, button_w, inputField.LABEL_H];","            ","            button.Text = label;","            button.Position(3) = inputField.widthOfString(button.Text, inputField.LABEL_H) + inputField.widthOfString('  ', inputField.LABEL_H + inputField.LABEL_GAP);","            ","            w = button.Position(3);","        end","        ","        function buttonClickedCallback(obj, ~)","            import nla.* % required due to matlab package system quirks","            [file, path, idx] = uigetfile( ...","                {'*.txt;*.dat;*.csv', 'Text (*.txt,*.dat,*.csv)'; ...","                '*.xls;*.xlsb;*.xlsm;*.xlsx;*.xltm;*.xltx;*.ods', 'Spreadsheet (*.xls,*.xlsb,*.xlsm,*.xlsx,*.xltm,*.xltx,*.ods)'; ...","                '*.xml', 'XML (*.xml)'; ...","                '*.docx', 'Word (*.docx)'; ...","                '*.mat', 'MATLAB table (*.mat)'; ...","                '*.html;*.xhtml;*.htm', 'HTML (*.html,*.xhtml,*.htm)'}, 'Select Behavior File');","            if idx ~= 0","                try","                    prog = uiprogressdlg(obj.fig, 'Title', 'Loading behavior file', 'Message', sprintf('Loading %s', file), 'Indeterminate', true);","                    drawnow;","","                    if idx == 5","                        containing_struct = load([path file]);","                        fn = fieldnames(containing_struct);","                        if numel(fn) == 1","                            fname = fn{1};","                            if istable(containing_struct.(fname))","                                behavior_file = containing_struct.(fname);","                            else","                                error('No table to load from MATLAB file.');","                            end","                        else","                            error('Could not find table to load from MATLAB file - make sure it only contains a table.');","                        end","                    else","                        behavior_file = readtable([path file]);","                    end","                    obj.behavior_full = behavior_file;","                    obj.behavior_filename = file;","","                    % reset selected since we loaded a new behavior_full","                    obj.resetSelectedCol();","","                    close(prog);","                    % check for unusual values in behavior","                    labels = obj.behavior_full.Properties.VariableNames;","                    could_not_load_some_columns = false;","                    could_not_load_str = [];","                    ","                    non_numerical_indexes = [];","                    for i=1:numel(obj.behavior_full.Properties.VariableNames)","                        col = table2array(obj.behavior_full(:, i));","                        if ~(isnumeric(col) || islogical(col))","                            non_numerical_indexes = [non_numerical_indexes i];","                        end","                    end","                    if numel(non_numerical_indexes) > 0","                        could_not_load_some_columns = true;","                        could_not_load_str = [could_not_load_str sprintf(\"Columns %s could not be loaded due to containing non-numerical values.\", nla.helpers.humanReadableList(labels(non_numerical_indexes)))];","                        obj.behavior_full(:, non_numerical_indexes) = [];","                    end","                    ","                    vals = table2array(obj.behavior_full);","","                    containsNaN = sum(isnan(vals)) > 0;","                    repeatedNines = ((vals == 99) + (vals == 999) + (vals == 9999)) > 0;","                    unusualValues = abs((vals - mean(vals)) ./ std(vals)) > 3;","                    containsRepeatedNines = sum(repeatedNines & unusualValues) > 0;","                    if sum(containsNaN) > 0","                        could_not_load_some_columns = true;","                        could_not_load_str = [could_not_load_str sprintf(\"Columns %s could not be loaded due to containing NaN values.\", nla.helpers.humanReadableList(labels(containsNaN)))];","                        colindexes = [1:numel(labels)];","                        obj.behavior_full(:, colindexes(containsNaN)) = [];","                    end","                    ","                    if could_not_load_some_columns","                        uialert(obj.fig, join(could_not_load_str, newline), 'Warning', 'Icon', 'warning');","                    end","                    ","                    if sum(containsRepeatedNines) > 0","                        uialert(obj.fig, sprintf(\"Columns %s contain unusual values of repeating 9's (99, 9999, etc).\\nIf you are using these to mark missing values for subjects, you should either avoid using the offending columns, or remove the offending subjects from your behavioral file and functional connectivity before loading them in.\", nla.helpers.humanReadableList(labels(containsRepeatedNines))), 'Warning', 'Icon', 'warning');","                    end","","                    obj.update();","                catch ex","                    close(prog);","                    uialert(obj.fig, ex.message, 'Error while loading behavior file');","                end","            end","        end","        ","        function genPartialVarianceOpts(obj)","            import nla.* % required due to matlab package system quirks","            if obj.covariates_enabled == inputField.CovariatesEnabled.ALL","                obj.select_partial_variance.Items = {'None', 'FC + BX', 'Only BX', 'Only FC'};","                obj.select_partial_variance.ItemsData = [PartialVarianceType.NONE, PartialVarianceType.FCBX, PartialVarianceType.ONLY_BX, PartialVarianceType.ONLY_FC];","            elseif obj.covariates_enabled == inputField.CovariatesEnabled.ONLY_FC","                obj.select_partial_variance.Items = {'None', 'Only FC'};","                obj.select_partial_variance.ItemsData = [PartialVarianceType.NONE, PartialVarianceType.ONLY_FC];","            else","                obj.select_partial_variance.Items = {'None'};","                obj.select_partial_variance.ItemsData = [PartialVarianceType.NONE];","            end","        end","        ","        function cellSelectedCallback(obj, src, event)","            obj.cols_selected = unique(event.Indices(:, 2));","        end","        ","        function button_set_bxClickedCallback(obj, ~)","            if obj.cols_selected","                obj.behavior_idx = obj.cols_selected(1);","                obj.behavior = table2array(obj.table.Data(:, obj.behavior_idx));","            end","            obj.update();","        end","        ","        function button_add_covClickedCallback(obj, ~)","            if islogical(obj.covariates_idx)","                obj.covariates_idx = [];","            end","            if obj.cols_selected","                obj.covariates_idx = union(obj.covariates_idx, obj.cols_selected);","                obj.covariates = table2array(obj.table.Data(:, obj.covariates_idx));","            end","            if isempty(obj.covariates_idx)","                obj.covariates_idx = false;","            end","            obj.update();","        end","","        function button_sub_covClickedCallback(obj, ~)","            if islogical(obj.covariates_idx)","                obj.covariates_idx = [];","            end","            if obj.cols_selected","                obj.covariates_idx = setdiff(obj.covariates_idx, obj.cols_selected);","                obj.covariates = table2array(obj.table.Data(:, obj.covariates_idx));","            end","            if isempty(obj.covariates_idx)","                obj.covariates_idx = false;","            end","            obj.update();","        end","        ","        function button_view_design_mtxClickedCallback(obj)","            import nla.* % required due to matlab package system quirks","            if ~islogical(obj.covariates_idx)","                labels = {obj.table.ColumnName{obj.covariates_idx}};","                gfx.drawDesignMtx(obj.covariates, labels);","            end","        end","        ","        function update(obj)","            import nla.* % required due to matlab package system quirks","                    ","            if islogical(obj.behavior_filename)","                obj.button.Text = 'Select';","            else","                obj.button.Text = obj.behavior_filename;","            end","            obj.button.Position(3) = inputField.widthOfString(obj.button.Text, inputField.LABEL_H) + inputField.widthOfString('  ', inputField.LABEL_H + inputField.LABEL_GAP);","            ","            removeStyle(obj.table);","            if islogical(obj.behavior_full)","                ","                obj.table.Enable = 'off';","                obj.button_set_bx.Enable = false;","                ","                obj.button_add_cov.Enable = false;","                obj.button_sub_cov.Enable = false;","                obj.button_view_design_mtx.Enable = false;","                obj.select_partial_variance.Enable = false;","                obj.select_partial_variance_label.Enable = false;","            else","                obj.table.Data = obj.behavior_full;","                obj.table.ColumnName = obj.behavior_full.Properties.VariableNames;","                ","                % Set column colors","                obj.satisfied = false;","                if ~islogical(obj.behavior_idx)","                    bx_s = uistyle('BackgroundColor','#E3FDD8');","                    addStyle(obj.table, bx_s, 'column', obj.behavior_idx)","                    obj.satisfied = true;","                end","                ","                if ~islogical(obj.covariates_idx)","                    cov_s = uistyle('BackgroundColor','#FADADD');","                    addStyle(obj.table, cov_s, 'column', obj.covariates_idx)","                end","                ","                % Enable buttons","                obj.table.Enable = 'on';","                obj.button_set_bx.Enable = true;","                ","                enable_cov = (obj.covariates_enabled ~= inputField.CovariatesEnabled.NONE);","                obj.button_add_cov.Enable = enable_cov;","                obj.button_sub_cov.Enable = enable_cov;","                obj.button_view_design_mtx.Enable = enable_cov;","                ","                obj.genPartialVarianceOpts();","                ","                obj.select_partial_variance.Enable = ~islogical(obj.covariates_idx);","                obj.select_partial_variance_label.Enable = ~islogical(obj.covariates_idx);","                if islogical(obj.covariates_idx)","                    obj.select_partial_variance.Value = false;","                end","            end","        end","    end","end","",""],"CoverageData":{"CoveredLineNumbers":[],"UnhitLineNumbers":[33,34,38,39,40,41,47,49,50,52,53,56,57,59,60,61,62,65,66,68,69,71,74,75,76,77,78,79,80,83,86,87,90,91,94,95,98,101,102,103,104,105,107,108,109,110,111,112,114,119,120,122,123,125,126,128,129,131,132,134,135,137,138,140,141,143,144,150,151,152,153,155,156,157,158,159,160,163,164,165,166,167,168,169,170,173,174,177,182,183,184,185,186,187,188,189,198,199,201,202,204,205,207,212,219,220,221,222,224,225,226,227,228,229,230,231,232,234,235,237,238,240,241,244,246,248,249,250,252,253,254,255,256,259,260,261,262,265,267,268,269,270,271,272,273,274,275,278,279,282,283,286,287,288,289,296,297,298,299,300,301,302,303,304,309,313,314,315,317,321,322,324,325,326,328,329,331,335,336,338,339,340,342,343,345,350,351,352,359,360,361,362,364,366,367,369,370,372,373,374,375,376,377,378,379,382,383,384,385,386,389,390,391,395,396,398,399,400,401,403,405,406,407,408],"HitCount":[0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]}}